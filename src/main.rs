extern crate rand;
extern crate sdl2;

#[macro_use]
extern crate log;
extern crate env_logger;

pub mod cpu;
pub mod graphics;
pub mod keypad;
pub mod io;

use io::Display;
use graphics::Graphics;
use cpu::Cpu;
use keypad::Keypad;

const PONG: [u8; 246] = [
    0x6a, 0x02, 0x6b, 0x0c, 0x6c, 0x3f, 0x6d, 0x0c, 0xa2, 0xea, 0xda, 0xb6, 0xdc, 0xd6, 0x6e, 0x00,
    0x22, 0xd4, 0x66, 0x03, 0x68, 0x02, 0x60, 0x60, 0xf0, 0x15, 0xf0, 0x07, 0x30, 0x00, 0x12, 0x1a,
    0xc7, 0x17, 0x77, 0x08, 0x69, 0xff, 0xa2, 0xf0, 0xd6, 0x71, 0xa2, 0xea, 0xda, 0xb6, 0xdc, 0xd6,
    0x60, 0x01, 0xe0, 0xa1, 0x7b, 0xfe, 0x60, 0x04, 0xe0, 0xa1, 0x7b, 0x02, 0x60, 0x1f, 0x8b, 0x02,
    0xda, 0xb6, 0x60, 0x0c, 0xe0, 0xa1, 0x7d, 0xfe, 0x60, 0x0d, 0xe0, 0xa1, 0x7d, 0x02, 0x60, 0x1f,
    0x8d, 0x02, 0xdc, 0xd6, 0xa2, 0xf0, 0xd6, 0x71, 0x86, 0x84, 0x87, 0x94, 0x60, 0x3f, 0x86, 0x02,
    0x61, 0x1f, 0x87, 0x12, 0x46, 0x02, 0x12, 0x78, 0x46, 0x3f, 0x12, 0x82, 0x47, 0x1f, 0x69, 0xff,
    0x47, 0x00, 0x69, 0x01, 0xd6, 0x71, 0x12, 0x2a, 0x68, 0x02, 0x63, 0x01, 0x80, 0x70, 0x80, 0xb5,
    0x12, 0x8a, 0x68, 0xfe, 0x63, 0x0a, 0x80, 0x70, 0x80, 0xd5, 0x3f, 0x01, 0x12, 0xa2, 0x61, 0x02,
    0x80, 0x15, 0x3f, 0x01, 0x12, 0xba, 0x80, 0x15, 0x3f, 0x01, 0x12, 0xc8, 0x80, 0x15, 0x3f, 0x01,
    0x12, 0xc2, 0x60, 0x20, 0xf0, 0x18, 0x22, 0xd4, 0x8e, 0x34, 0x22, 0xd4, 0x66, 0x3e, 0x33, 0x01,
    0x66, 0x03, 0x68, 0xfe, 0x33, 0x01, 0x68, 0x02, 0x12, 0x16, 0x79, 0xff, 0x49, 0xfe, 0x69, 0xff,
    0x12, 0xc8, 0x79, 0x01, 0x49, 0x02, 0x69, 0x01, 0x60, 0x04, 0xf0, 0x18, 0x76, 0x01, 0x46, 0x40,
    0x76, 0xfe, 0x12, 0x6c, 0xa2, 0xf2, 0xfe, 0x33, 0xf2, 0x65, 0xf1, 0x29, 0x64, 0x14, 0x65, 0x00,
    0xd4, 0x55, 0x74, 0x15, 0xf2, 0x29, 0xd4, 0x55, 0x00, 0xee, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00
];

const TEST: [u8; 470] = [
    0x00, 0xe0, 0x63, 0x00, 0x64, 0x01, 0x65, 0xee, 0x35, 0xee, 0x13, 0x10, 0x63, 0x00, 0x64, 0x02,
    0x65, 0xee, 0x66, 0xee, 0x55, 0x60, 0x13, 0x10, 0x63, 0x00, 0x64, 0x03, 0x65, 0xee, 0x45, 0xfd,
    0x13, 0x10, 0x63, 0x00, 0x64, 0x04, 0x65, 0xee, 0x75, 0x01, 0x35, 0xef, 0x13, 0x10, 0x63, 0x00,
    0x64, 0x05, 0x6f, 0x01, 0x65, 0xee, 0x66, 0xef, 0x85, 0x65, 0x3f, 0x00, 0x13, 0x10, 0x63, 0x00,
    0x64, 0x06, 0x6f, 0x00, 0x65, 0xef, 0x66, 0xee, 0x85, 0x65, 0x3f, 0x01, 0x13, 0x10, 0x6f, 0x00,
    0x63, 0x00, 0x64, 0x07, 0x65, 0xee, 0x66, 0xef, 0x85, 0x67, 0x3f, 0x01, 0x13, 0x10, 0x63, 0x00,
    0x64, 0x08, 0x6f, 0x01, 0x65, 0xef, 0x66, 0xee, 0x85, 0x67, 0x3f, 0x00, 0x13, 0x10, 0x63, 0x00,
    0x64, 0x09, 0x65, 0xf0, 0x66, 0x0f, 0x85, 0x61, 0x35, 0xff, 0x13, 0x10, 0x63, 0x01, 0x64, 0x00,
    0x65, 0xf0, 0x66, 0x0f, 0x85, 0x62, 0x35, 0x00, 0x13, 0x10, 0x63, 0x01, 0x64, 0x01, 0x65, 0xf0,
    0x66, 0x0f, 0x85, 0x63, 0x35, 0xff, 0x13, 0x10, 0x6f, 0x00, 0x63, 0x01, 0x64, 0x02, 0x65, 0x81,
    0x85, 0x0e, 0x3f, 0x01, 0x13, 0x10, 0x63, 0x01, 0x64, 0x03, 0x6f, 0x01, 0x65, 0x47, 0x85, 0x0e,
    0x3f, 0x00, 0x13, 0x10, 0x63, 0x01, 0x64, 0x04, 0x6f, 0x00, 0x65, 0x01, 0x85, 0x06, 0x3f, 0x01,
    0x13, 0x10, 0x63, 0x01, 0x64, 0x05, 0x6f, 0x01, 0x65, 0x02, 0x85, 0x06, 0x3f, 0x00, 0x13, 0x10,
    0x63, 0x01, 0x64, 0x06, 0x60, 0x15, 0x61, 0x78, 0xa3, 0xd0, 0xf1, 0x55, 0xf1, 0x65, 0x30, 0x15,
    0x13, 0x10, 0x31, 0x78, 0x13, 0x10, 0x63, 0x01, 0x64, 0x07, 0x60, 0x8a, 0xa3, 0xd0, 0xf0, 0x33,
    0xa3, 0xd0, 0xf0, 0x65, 0x30, 0x01, 0x13, 0x10, 0x60, 0x01, 0xf0, 0x1e, 0xf0, 0x65, 0x30, 0x03,
    0x13, 0x10, 0x60, 0x01, 0xf0, 0x1e, 0xf0, 0x65, 0x30, 0x08, 0x13, 0x10, 0x13, 0x32, 0x13, 0x0e,
    0xa3, 0x2a, 0x60, 0x13, 0x61, 0x09, 0xd0, 0x18, 0xf3, 0x29, 0x60, 0x22, 0x61, 0x0b, 0xd0, 0x15,
    0xf4, 0x29, 0x60, 0x28, 0x61, 0x0b, 0xd0, 0x15, 0x13, 0x0e, 0xff, 0xf0, 0xf0, 0xff, 0xf0, 0xf0,
    0xf0, 0xff, 0xa3, 0x58, 0x60, 0x15, 0x61, 0x0b, 0x63, 0x08, 0xd0, 0x18, 0x70, 0x08, 0xf3, 0x1e,
    0x30, 0x2d, 0x13, 0x3a, 0xa3, 0x70, 0x60, 0x02, 0x61, 0x18, 0x63, 0x08, 0xd0, 0x18, 0x70, 0x05,
    0xf3, 0x1e, 0x30, 0x3e, 0x13, 0x4c, 0x13, 0x0e, 0xf0, 0x88, 0x88, 0xf0, 0x88, 0x88, 0x88, 0xf0,
    0x78, 0x84, 0x84, 0x84, 0x84, 0x84, 0x84, 0x78, 0x84, 0xc4, 0xa4, 0x94, 0x8c, 0x84, 0x84, 0x84,
    0xc0, 0xa0, 0xa0, 0xc0, 0xa0, 0xa0, 0xc0, 0x00, 0x00, 0x00, 0xa0, 0xa0, 0xe0, 0x20, 0x20, 0xe0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xa0, 0xa0, 0xc0, 0xa0, 0xa0, 0xc0, 0x00,
    0x00, 0x00, 0x60, 0xa0, 0xc0, 0x80, 0x60, 0x00, 0x00, 0x00, 0x60, 0x80, 0x40, 0x20, 0xc0, 0x00,
    0x80, 0x80, 0xc0, 0x80, 0x80, 0x80, 0x60, 0x00, 0xe0, 0x80, 0x80, 0x80, 0x80, 0x80, 0xe0, 0x00,
    0x00, 0x00, 0x40, 0xa0, 0xa0, 0xa0, 0x40, 0x00, 0x20, 0x20, 0x20, 0x60, 0xa0, 0xa0, 0x60, 0x00,
    0x00, 0x00, 0x60, 0xa0, 0xc0, 0x80, 0x60, 0x00, 0x00, 0x00, 0x00, 0x60, 0x40, 0x40, 0x50, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00
];

fn main() {
    env_logger::init();

    let mut cpu = Cpu::new();
    cpu.load_rom(TEST.as_ref());
    let mut display = Display::new();

    loop {
        cpu.execute_cycle();
        display.render(&cpu);
//        ::std::thread::sleep_ms(1000);
    }
}
